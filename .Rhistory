don_raw$COM[6940]
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(Date=dmy(Date),
time=ymd_hms(paste(Date,Heure)),
ref=str_sub(COM,start=1,end=str_length(COM)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
runApp('App_Lora.R')
library(shiny); runApp('App_visuRadiation.R')
donT=data.table::fread(input = '0-data/PAR Time.csv') %>%
filter(File!='') %>%
mutate(start=dmy_hms(paste0(`Day of setting`,'_',`Setting Time`,':00')),
end=dmy_hms(paste0(`Day of taking`,'_',`Taking time`,':00'))) %>%
data.frame()
donT
# Load packages -----------------------------------------------------------
packs <- c("lubridate", "stringr", 'tidyverse','viridis','data.table','cowplot','plotly')
InstIfNec<-function (pack) {
if (!do.call(require,as.list(pack))) {
do.call(install.packages,as.list(pack))  }
do.call(require,as.list(pack)) }
lapply(packs, InstIfNec)
# inputs ------------------------------------------------------------------
### Apogee sensors coefficients
coefPAR=71.0 #micromol.m-2.s-1 per mV
coefFR=51.45 #micromol.m-2.s-1 per mV
## vector of info names in the RawData column
nbSlots=7
names=paste0(c('slot','value'),rep(x = c(1:nbSlots),each=2))
vecName= c('station',names,'E')
tableSlot=data.frame(sensor=c("T0 S2","T1 S3","T2 S1","T3 S1","T4 S1","T5 S1","T6 S1"),
variable=c('Battery','Temperature','PAR','FR','-','--','---'))
files=list.files(path = '0-data/',pattern = 'DATA')
files
file=files[1]
don_raw=data.table::fread(input = paste0('0-data/',file))
file
data.table::fread(input = paste0('0-data/',file))
don_raw=data.table::fread(input = paste0('0-data/',file))
View(don_raw)
head(don_raw)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
mutate(time=ymd_hm(Date),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
View(don_raw)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
mutate(time=ymd_hm(Date),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
View(don_raw)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
mutate(time=ymd_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
data.table::fread(input = paste0('0-data/',file)) %>%
mutate(time=ymd_hms(paste0(Date,':00')))
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=ymd_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
View(don_raw)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=ymd_hms(paste0(Date,':00'))
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=ymd_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1))
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame()
paste0(don_raw$Date,':00')
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
View(don_raw)
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,time,RawData)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file)
donF=merge(donF,tableSlot)
allDat=rbind(allDat,donF)
allDat=NULL #init
files=list.files(path = '0-data/',pattern = 'DATA')
for (file in files){
# file=files[1]
# TimeStart=ymd_hms(donT[donT$File==str_remove(file,'.CSV'),'start'])
# don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
#   mutate(time=TimeStart+Timestamp,
#          ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
#   tidyr::separate(col = ref,into =vecName ,sep='#')
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,time,RawData)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file)
donF=merge(donF,tableSlot)
allDat=rbind(allDat,donF)
}
donPlot=allDat %>%
filter(variable %in% c('PAR','FR','Battery','Temperature')) %>%
mutate(Date=str_sub(time,1,10),
hms=hms(str_sub(time,12,19)),
tension=ifelse(sensor=='T3 S1',tension*coefFR,tension),
tension=ifelse(sensor=='T2 S1',tension*coefPAR,tension))
donPlot %>%
filter(variable %in% c('PAR','FR','Battery','Temperature')) %>%
mutate(tension=ifelse(sensor=='T3 S1',tension*coefFR,tension)) %>%
mutate(tension=ifelse(sensor=='T2 S1',tension*coefPAR,tension)) %>%
ggplot(aes(x=time,y=tension,col=sensor,group=DATA))+
geom_line()+
facet_wrap(~variable,scale='free_y')+
scale_x_datetime()+
labs(y='')
View(donPlot)
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,Date,time,RawData)
View(don)
allDat=NULL #init
files=list.files(path = '0-data/',pattern = 'DATA')
for (file in files){
# file=files[1]
# TimeStart=ymd_hms(donT[donT$File==str_remove(file,'.CSV'),'start'])
# don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
#   mutate(time=TimeStart+Timestamp,
#          ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
#   tidyr::separate(col = ref,into =vecName ,sep='#')
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,Date,time,RawData)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file)
donF=merge(donF,tableSlot)
allDat=rbind(allDat,donF)
}
donPlot=allDat %>%
filter(variable %in% c('PAR','FR','Battery','Temperature')) %>%
mutate(Date=str_sub(time,1,10),
hms=hms(str_sub(time,12,19)),
tension=ifelse(sensor=='T3 S1',tension*coefFR,tension),
tension=ifelse(sensor=='T2 S1',tension*coefPAR,tension))
donPlot %>%
filter(variable %in% c('PAR','FR','Battery','Temperature')) %>%
mutate(tension=ifelse(sensor=='T3 S1',tension*coefFR,tension)) %>%
mutate(tension=ifelse(sensor=='T2 S1',tension*coefPAR,tension)) %>%
ggplot(aes(x=time,y=tension,col=sensor,group=DATA))+
geom_line()+
facet_wrap(~variable,scale='free_y')+
scale_x_datetime()+
labs(y='')
# Load packages -----------------------------------------------------------
packs <- c("lubridate", "stringr", 'tidyverse','viridis','data.table','cowplot','plotly')
InstIfNec<-function (pack) {
if (!do.call(require,as.list(pack))) {
do.call(install.packages,as.list(pack))  }
do.call(require,as.list(pack)) }
lapply(packs, InstIfNec)
coefPAR=71.0 #micromol.m-2.s-1 per mV
coefFR=51.45 #micromol.m-2.s-1 per mV
## vector of info names in the RawData column
nbSlots=7
names=paste0(c('slot','value'),rep(x = c(1:nbSlots),each=2))
vecName= c('station',names,'E')
tableSlot=data.frame(sensor=c("T0 S2","T1 S3","T2 S1","T3 S1","T4 S1","T5 S1","T6 S1"),
variable=c('Battery','Temperature','PAR','FR','-','--','---'))
## start time
donT=data.table::fread(input = '0-data/PAR Time.csv') %>%
filter(File!='') %>%
mutate(start=dmy_hms(paste0(`Day of setting`,'_',`Setting Time`,':00')),
end=dmy_hms(paste0(`Day of taking`,'_',`Taking time`,':00'))) %>%
data.frame()
allDat=NULL #init
files=list.files(path = '0-data/',pattern = 'DATA')
file=files[1]
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
View(don_raw)
# SCRITP TO READ AND VISUALIZE THE DATA OF PAR SENSORS FROM THE PH --------
### R. PEREZ, 16 Mai 2024
# Load packages -----------------------------------------------------------
packs <- c("lubridate", "stringr", 'tidyverse','viridis','data.table','cowplot','plotly')
InstIfNec<-function (pack) {
if (!do.call(require,as.list(pack))) {
do.call(install.packages,as.list(pack))  }
do.call(require,as.list(pack)) }
lapply(packs, InstIfNec)
# inputs ------------------------------------------------------------------
### Apogee sensors coefficients
coefPAR=71.0 #micromol.m-2.s-1 per mV
coefFR=51.45 #micromol.m-2.s-1 per mV
## vector of info names in the RawData column
nbSlots=7
names=paste0(c('slot','value'),rep(x = c(1:nbSlots),each=2))
vecName= c('station',names,'E')
tableSlot=data.frame(sensor=c("T0 S2","T1 S3","T2 S1","T3 S1","T4 S1","T5 S1","T6 S1"),
variable=c('Battery','Temperature','PAR','FR','-','--','---'))
## start time
donT=data.table::fread(input = '0-data/PAR Time.csv') %>%
filter(File!='') %>%
mutate(start=dmy_hms(paste0(`Day of setting`,'_',`Setting Time`,':00')),
end=dmy_hms(paste0(`Day of taking`,'_',`Taking time`,':00'))) %>%
data.frame()
# load the data -----------------------------------------------------------
allDat=NULL #init
files=list.files(path = '0-data/',pattern = 'DATA')
for (file in files){
# file=files[1]
# TimeStart=ymd_hms(donT[donT$File==str_remove(file,'.CSV'),'start'])
# don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
#   mutate(time=TimeStart+Timestamp,
#          ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
#   tidyr::separate(col = ref,into =vecName ,sep='#')
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,Date,time,RawData)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file)
donF=merge(donF,tableSlot)
allDat=rbind(allDat,donF)
}
# plots -------------------------------------------------------------------
donPlot=allDat %>%
filter(variable %in% c('PAR','FR','Battery','Temperature')) %>%
mutate(Date=str_sub(time,1,10),
hms=hms(str_sub(time,12,19)),
tension=ifelse(sensor=='T3 S1',tension*coefFR,tension),
tension=ifelse(sensor=='T2 S1',tension*coefPAR,tension))
donPlot %>%
filter(variable %in% c('PAR','FR','Battery','Temperature')) %>%
mutate(tension=ifelse(sensor=='T3 S1',tension*coefFR,tension)) %>%
mutate(tension=ifelse(sensor=='T2 S1',tension*coefPAR,tension)) %>%
ggplot(aes(x=time,y=tension,col=sensor,group=DATA))+
geom_line()+
facet_wrap(~variable,scale='free_y')+
scale_x_datetime()+
labs(y='')
ggplotly(donPlot%>% filter(variable %in% c('PAR','FR')) %>%
ggplot(aes(x=time,y=tension,col=variable,group=DATA))+
geom_line()+
scale_x_datetime())
ggplot()+
geom_line(data=donPlot %>% filter(variable %in% c('PAR','FR')),aes(x=hms,y=tension,col=variable))+
facet_wrap(~Date)+
scale_x_time()+
ylab(expression('PFD '*(mu*mol*' '*m**-2*' '*s**-1)))
#### test the %FR with time and hour of the day
merge(donPlot%>% filter(variable=='PAR') %>%
mutate(PAR=tension) %>%
select(Date,time,hms,PAR),
donPlot%>% filter(variable=='FR') %>%
mutate(FR=tension) %>%
select(Date,time,hms,FR)) %>%
filter(FR>0 & PAR>0) %>%
mutate(ratio=FR/(FR+PAR)) %>%
ggplot(aes(x=hms,y=ratio,group=Date,col=PAR))+
geom_line()+
scale_x_time()
library(shiny); runApp('App_visuRadiation.R')
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don_raw
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,Date,time,RawData)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file)
View(donF)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
Date=dmy(Date),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
View(don_raw)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
Date=date(Date),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
View(don_raw)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
Date=str_sub(Date,1,10),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
View(don_raw)
runApp('App_visuRadiation.R')
runApp('App_visuRadiation.R')
allDat=NULL #init
files=list.files(path = '0-data/',pattern = 'LORA')
for (file in files){
# file=files[1]
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(Date=dmy(Date),
time=ymd_hms(paste(Date,Heure)),
ref=str_sub(COM,start=1,end=str_length(COM)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don=don_raw %>% select(Date,Heure,time,COM)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file,
Logger=str_sub(COM,1,2),
sensor=str_remove(sensor,' S1'),
sensor=str_remove(sensor,' S4'))
donF=merge(donF,tableSlot)
donF=merge(donF,tableCoeff)
allDat=rbind(allDat,donF) %>%
mutate(value=tension*Coeff)
}
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
Date=str_sub(Date,1,10),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,Date,time,RawData)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file)
View(donF)
# SCRITP TO READ AND VISUALIZE THE DATA OF PAR SENSORS FROM THE PH --------
### R. PEREZ, 16 Mai 2024
# Load packages -----------------------------------------------------------
packs <- c("lubridate", "stringr", 'tidyverse','viridis','data.table','cowplot','plotly')
InstIfNec<-function (pack) {
if (!do.call(require,as.list(pack))) {
do.call(install.packages,as.list(pack))  }
do.call(require,as.list(pack)) }
lapply(packs, InstIfNec)
# inputs ------------------------------------------------------------------
### Apogee sensors coefficients
coefPAR=71.0 #micromol.m-2.s-1 per mV
coefFR=51.45 #micromol.m-2.s-1 per mV
## vector of info names in the RawData column
nbSlots=7
names=paste0(c('slot','value'),rep(x = c(1:nbSlots),each=2))
vecName= c('station',names,'E')
tableSlot=data.frame(sensor=c("T0 S2","T1 S3","T2 S1","T3 S1","T4 S1","T5 S1","T6 S1"),
variable=c('Battery','Temperature','PAR','FR','-','--','---'))
## start time
donT=data.table::fread(input = '0-data/PAR Time.csv') %>%
filter(File!='') %>%
mutate(start=dmy_hms(paste0(`Day of setting`,'_',`Setting Time`,':00')),
end=dmy_hms(paste0(`Day of taking`,'_',`Taking time`,':00'))) %>%
data.frame()
# load the data -----------------------------------------------------------
allDat=NULL #init
files=list.files(path = '0-data/',pattern = 'DATA')
for (file in files){
# file=files[1]
# TimeStart=ymd_hms(donT[donT$File==str_remove(file,'.CSV'),'start'])
# don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
#   mutate(time=TimeStart+Timestamp,
#          ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
#   tidyr::separate(col = ref,into =vecName ,sep='#')
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
Date=str_sub(Date,1,10),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,Date,time,RawData)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file)
donF=merge(donF,tableSlot)
allDat=rbind(allDat,donF)
}
View(donF)
summary(allDat)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
Date=str_sub(Date,1,10),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')))
View(don_raw)
don_raw=data.table::fread(input = paste0('0-data/',file)) %>%
data.frame() %>%
mutate(time=dmy_hms(paste0(Date,':00')),
Date=str_sub(Date,1,10),
ref=str_sub(RawData,start=4,end=str_length(RawData)-1)) %>%
tidyr::separate(col = ref,into =vecName ,sep='#')
don=don_raw %>% select(ID,Timestamp,Days,Hours,Minutes,Date,time,RawData)
for (i in 1: nbSlots){
dsub=don_raw %>%
mutate(info=paste(get(paste0('slot',i)),get(paste0('value',i))))
colnames(dsub)[colnames(dsub)=='info']=paste0('info',i)
don=cbind(don,dsub %>%
select(paste0('info',i)))
}
donF=don %>%
tidyr::gather(key = 'info',value = 'value',contains('info')) %>%
mutate(value=str_remove(value,'_A11')) %>%
tidyr::separate(col = value,into = c('sensor','tension'),sep = '_') %>%
mutate(tension=as.numeric(tension),
DATA=file)
donF=merge(donF,tableSlot)
allDat=rbind(allDat,donF)
View(allDat)
runApp('App_visuRadiation.R')
runApp('App_visuRadiation.R')
